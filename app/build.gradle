apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jakewharton.butterknife'

ext {
    // can be set to default values or blank
    dependenciesFlavor = "global"
//    dependenciesFlavor = "china"
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.fluidtouch.noteshelf2"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 258
        versionName "4.18.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
        externalNativeBuild {
            cmake {
                cppFlags "-fstack-protector-strong"
            }
        }
        resConfigs "en", "de", "es", "fr", "it", "ja", "ko", "zh", "zh-rHK", "zh-rTW"
    }

    lintOptions {
        checkReleaseBuilds false
    }
    flavorDimensions("basicconfig")
    productFlavors {
        // Dev API environment
        dev {
            applicationIdSuffix ".dev"
            dimension = "basicconfig"
            buildConfigField "String", "dropBoxApiKey", "\"ds8tl9b97luuack\""
            resValue "integer", "minimumLaunchTimes", "1"
            resValue "integer", "minimumDays", "0"
            resValue "integer", "minimumLaunchTimesToShowAgain", "2"
            resValue "integer", "minimumDaysToShowAgain", "0"
            manifestPlaceholders = [
                    appName            : "@string/app_name_dev",
                    appIcon            : "@mipmap/dev_app_icon_launcher",
                    appIconRound       : "@mipmap/dev_app_icon_launcher_round",
                    dropBoxAppKey      : "ds8tl9b97luuack",
                    oneDriveSigningHash: "y5gOFnKK5ZubY11AolshR7CxdjA="
            ]
        }

        // Testing API environment
        beta {
            applicationIdSuffix ".beta"
            dimension = "basicconfig"
            buildConfigField "String", "dropBoxApiKey", "\"j9go68bwvqzgi48\""
            resValue "integer", "minimumLaunchTimes", "1"
            resValue "integer", "minimumDays", "0"
            resValue "integer", "minimumLaunchTimesToShowAgain", "2"
            resValue "integer", "minimumDaysToShowAgain", "0"
            manifestPlaceholders = [
                    appName            : "@string/app_name_beta",
                    appIcon            : "@mipmap/beta_app_icon_launcher",
                    appIconRound       : "@mipmap/beta_app_icon_launcher_round",
                    dropBoxAppKey      : "j9go68bwvqzgi48",
                    oneDriveSigningHash: "y5gOFnKK5ZubY11AolshR7CxdjA="
            ]
        }
        // Production API environment
        prod {
            dimension = "basicconfig"
            buildConfigField "String", "dropBoxApiKey", "\"10pxq2red5baspc\""
            resValue "integer", "minimumLaunchTimes", "5"
            resValue "integer", "minimumDays", "0"
            resValue "integer", "minimumLaunchTimesToShowAgain", "30"
            resValue "integer", "minimumDaysToShowAgain", "5"
            manifestPlaceholders = [
                    appName            : "@string/app_name",
                    appIcon            : "@mipmap/app_icon_launcher",
                    appIconRound       : "@mipmap/app_icon_launcher_round",
                    dropBoxAppKey      : "10pxq2red5baspc",
                    oneDriveSigningHash: "11sYGBTjLSXoau6TjWIm9oA8heM="
            ]
        }

        samsung {
            dimension = "basicconfig"
            buildConfigField "String", "dropBoxApiKey", "\"10pxq2red5baspc\""
            resValue "integer", "minimumLaunchTimes", "5"
            resValue "integer", "minimumDays", "0"
            resValue "integer", "minimumLaunchTimesToShowAgain", "30"
            resValue "integer", "minimumDaysToShowAgain", "5"
            manifestPlaceholders = [
                    appName            : "@string/app_name",
                    appIcon            : "@mipmap/app_icon_launcher",
                    appIconRound       : "@mipmap/app_icon_launcher_round",
                    dropBoxAppKey      : "10pxq2red5baspc",
                    oneDriveSigningHash: "qlyR/a8twmZP1H4RxjWqPYFa2G8="
            ]
        }

        samsungChinese {
            minSdkVersion 26
            dimension = "basicconfig"
            buildConfigField "String", "dropBoxApiKey", "\"10pxq2red5baspc\""
            resValue "integer", "minimumLaunchTimes", "5"
            resValue "integer", "minimumDays", "0"
            resValue "integer", "minimumLaunchTimesToShowAgain", "30"
            resValue "integer", "minimumDaysToShowAgain", "5"
            manifestPlaceholders = [
                    appName            : "@string/app_name",
                    appIcon            : "@mipmap/app_icon_launcher",
                    appIconRound       : "@mipmap/app_icon_launcher_round",
                    dropBoxAppKey      : "10pxq2red5baspc",
                    oneDriveSigningHash: "qlyR/a8twmZP1H4RxjWqPYFa2G8="
            ]
        }

        // HMS
        china {

            versionCode 508
            dimension = "basicconfig"
            buildConfigField "String", "dropBoxApiKey", "\"10pxq2red5baspc\""
            resValue "integer", "minimumLaunchTimes", "5"
            resValue "integer", "minimumDays", "0"
            resValue "integer", "minimumLaunchTimesToShowAgain", "30"
            resValue "integer", "minimumDaysToShowAgain", "5"
            manifestPlaceholders = [
                    appName            : "@string/app_name",
                    appIcon            : "@mipmap/app_icon_launcher",
                    appIconRound       : "@mipmap/app_icon_launcher_round",
                    dropBoxAppKey      : "10pxq2red5baspc",
                    oneDriveSigningHash: "qlyR/a8twmZP1H4RxjWqPYFa2G8="
            ]
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }

        /*
        release {
            storeFile file('release.keystore')
            storePassword "mystorepassword"
            keyAlias "mykeyalias"
            keyPassword "mykeypassword"
        }
        */
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            if (dependenciesFlavor.toString().contains("china")) {
                minifyEnabled false  // shrink
                shrinkResources false
            } else {
                minifyEnabled true  // shrink
                shrinkResources true
            }
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            https://firebase.google.com/docs/crashlytics/upgrade-sdk?platform=android
//            firebaseCrashlytics {
//                nativeSymbolUploadEnabled true
//            }
        }
    }

    packagingOptions {
        pickFirst 'lib/x86_64/libpdfsdk.so'
        pickFirst 'lib/armeabi/libpdfsdk.so'
        pickFirst 'lib/x86/libpdfsdk.so'
        pickFirst 'lib/armeabi-v7a/libpdfsdk.so'
        pickFirst 'lib/arm64-v8a/libpdfsdk.so'

        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi/libc++_shared.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'

        exclude 'META-INF/DEPENDENCIES'
    }

    sourceSets {
        main { jni.srcDirs = ['src/main/jni/', 'src/main/jniLibs/'] }
        dev {
            java.srcDirs = ['src/global/java']
            res.srcDirs = ['src/global/res']
        }

        beta {
            java.srcDirs = ['src/global/java']
            res.srcDirs = ['src/global/res']
        }

        prod {
            java.srcDirs = ['src/global/java']
            res.srcDirs = ['src/global/res']
        }

        samsung {
            java.srcDirs = ['src/global/java']
            res.srcDirs = ['src/global/res']
        }

        samsungChinese {
            java.srcDirs = ['src/china/java']
            res.srcDirs = ['src/china/res']
        }

        china {
            java.srcDirs = ['src/china/java']
            res.srcDirs = ['src/china/res']
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' //select ABIs to build APKs for
            universalApk true //generate an additional APK that contains all the ABIs
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
greendao {
    schemaVersion 4
    daoPackage "com.fluidtouch.noteshelf.backup.database"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':sardine-android-master')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    //implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.5.0-alpha01'

    implementation 'com.jakewharton:butterknife:10.2.3'
    kapt 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'com.yqritc:recyclerview-flexibledivider:1.2.6'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.googlecode.plist:dd-plist:1.23'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'kr.pe.burt.android.lib:androidoperationqueue:0.0.2'
    //Custom ProgressBar
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.github.antonKozyriatskyi:CircularProgressIndicator:1.2.2'
    implementation 'com.thoughtbot:expandablerecyclerview:1.4'
    implementation 'com.thesurix.gesturerecycler:gesture-recycler:1.7.0'
    // ZipArchive
    implementation 'com.github.ghost1372:Mzip-Android:0.4.0'
    //DownloadManager
    implementation 'com.mani:ThinDownloadManager:1.4.0'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'commons-codec:commons-codec:20041127.091804'
    implementation 'com.suddenh4x.ratingdialog:awesome-app-rating:2.2.1'

    implementation 'com.myscript:iink:1.4.1'
    implementation project(':openCVLibrary344')
    implementation project(':colorPickerLibrary')
    implementation project(path: ':Pdfboxlibrary')
    implementation project(path: ':pdfium-library')
    implementation files('libs/bcpg-jdk16-145-sources.jar')
    implementation files('libs/sdk-v1.0.1.jar')
    implementation project(path: ':PredictionSDKSample')
//    api(name: 'spensdk-v6.0_recog-CL5904421', ext: 'aar')
    api(name: 'rendering_engine', ext: 'aar')
//    implementation project(":FTRenderingEngine")


    //Zendesk Support SDK
    implementation group: 'com.zendesk', name: 'support', version: '5.0.2'
    //Evernote
    implementation 'com.evernote:android-sdk:2.0.0-RC4'

    implementation 'com.brucetoo.pickview:library:1.2.3'

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.22'

    if (dependenciesFlavor.toString().contains("china")) {
        // HMS
        //huawei integration
        implementation "com.huawei.agconnect:agconnect-auth:$rootProject.ext.authVersion"
        implementation "com.huawei.hms:base:4.0.0.300"
        implementation "com.huawei.hms:hwid:4.0.0.300"
        implementation 'com.huawei.hms:hianalytics:5.0.1.300'
        implementation 'com.huawei.agconnect:agconnect-crash:1.4.1.300'
        // Text recognition SDK.
        implementation 'com.huawei.hms:ml-computer-vision-ocr:2.0.0.300'
        // Text recognition model.
        implementation 'com.huawei.hms:ml-computer-vision-ocr-cn-model:2.0.0.300'
        implementation 'com.huawei.hms:ml-computer-vision-ocr-jk-model:2.0.0.300'
        implementation 'com.huawei.hms:ml-computer-vision-ocr-latin-model:2.0.0.300'
    } else {
        //Facebook
        implementation 'com.facebook.android:facebook-android-sdk:7.1.0'
        // Twitter
        implementation 'com.twitter.sdk.android:twitter-core:3.3.0'
        //Dropbox
        implementation 'com.dropbox.core:dropbox-core-sdk:3.1.5'
        implementation('com.google.http-client:google-http-client-gson:1.28.0') {
            exclude group: 'org.apache.httpcomponents'
        }

        //google
        implementation 'com.google.android.gms:play-services-auth:18.1.0'
        implementation 'com.google.android.play:core:1.8.0'
        //GoogleDrive
        implementation 'com.google.android.gms:play-services-drive:17.0.0'
        implementation('com.google.api-client:google-api-client-android:1.28.0') {
            exclude group: 'org.apache.httpcomponents'
        }
        implementation('com.google.apis:google-api-services-drive:v3-rev151-1.25.0') {
            exclude group: 'org.apache.httpcomponents'
        }
        //Firebase Kit
        implementation 'com.firebaseui:firebase-ui-auth:6.0.2'
        implementation 'com.google.firebase:firebase-core:17.5.0'
        implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
        implementation 'com.google.firebase:firebase-analytics:17.5.0'
        implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
        //OneDrive
        implementation('com.microsoft.identity.client:msal:2.0.2') { exclude group: 'com.microsoft.device.display' }
        implementation 'com.microsoft.graph:microsoft-graph:2.3.2'
    }

    implementation 'com.huawei.hms:drm:2.5.4.301'

}

gradle.startParameter.getTaskNames().each { task ->
    if (task.toLowerCase().contains("china")) {
        dependenciesFlavor = "china"
        apply plugin: 'com.huawei.agconnect'
        apply plugin: 'com.huawei.hms.plugin.analytics'
    } else {
        dependenciesFlavor = "global"
        apply plugin: 'com.google.gms.google-services'
        apply plugin: 'com.google.firebase.crashlytics'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '6.6.1'
}